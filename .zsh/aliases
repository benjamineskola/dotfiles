# -*- sh -*-

alias ls='ls -Fh'
alias ll='ls -l'
alias la='ls -A'
alias lal='ls -lA'
alias lsd='ls -d'

alias curl='curl -gkLsS'
alias dc="dc -e '2k' -f /dev/stdin"
alias grep=egrep
alias puppet-lint='puppet-lint --with-filename'
alias tf="tail -F"

alias ag='ag --pager less -aS -m 2147483647' # 2^31-1, seems to be maximum.
alias ack=ag

if [[ -e "$(which colordiff)" ]]; then
	alias diff='colordiff -u'
	alias colordiff='colordiff -u'
else
	alias diff='diff -u'
fi

if [[ -e "$(which service)" ]]; then
	alias service='command sudo service'
else
	alias service='command sudo invoke-rc.d'
fi

function laststatus {
	laststatus=$?
	case $laststatus in
		0)
			echo true;;
		1)
			echo false;;
		*)
			echo $laststatus;;
	esac
}

usergroups() {
	ldapsearch -x "(|(member=uid=$1,ou=people,dc=mendeley,dc=com)(memberuid=$1))" dn | grep '^dn'
}


alias workaws="aws --profile work"
alias homeaws="aws --profile home"

load_balancers() {
	workaws --output text elb describe-load-balancers --query 'LoadBalancerDescriptions[*].LoadBalancerName' | xargs -n 1 echo
}

describe_load_balancer() {
	name=$1
	if [ -z "$2" ]; then
		query="*"
	else
		query=$2
	fi
	workaws --output text elb describe-load-balancers --load-balancer-names "$1" --query "$query"
}

get_instance_ip() {
	for instance in $@; do
		workaws --output text ec2 describe-instances --query 'Reservations[*].Instances[*].PrivateIpAddress' --instance-id "$instance"
	done
}

staging_hosts() {
	get_instance_ip $(describe_load_balancer monolith-staging-frontend 'LoadBalancerDescriptions[*].Instances')
}

if [[ $(whoami) = root ]]; then
	alias sudo='echo stop it'
else
	alias sudo='sudo '
fi
