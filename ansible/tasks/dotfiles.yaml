- name: Ensure dotfiles and scripts are up to date
  command:
    cmd: git pull --rebase -q
    chdir: '{{ item }}'
  loop:
    - '{{ ansible_env.XDG_CONFIG_HOME }}'
    - '{{ ansible_env.HOME }}/bin'

- name: Link preferences into place
  file:
    src: '{{ ansible_env.XDG_CONFIG_HOME }}/{{ item }}'
    dest: '{{ ansible_env.HOME }}/Library/Preferences/{{ item }}'
    state: link
  loop:
    - espanso
    - rustfmt

- name: Create iTerm2 script directory
  file:
    dest: '{{ ansible_env.XDG_DATA_HOME }}/Application Support/iTerm2/Scripts'
    state: directory
- name: Link iTerm2 scripts into place
  copy:
    src: '{{ item }}'
    dest: '{{ ansible_env.XDG_DATA_HOME }}/Application Support/iTerm2/Scripts'
  with_fileglob:
    - '{{ ansible_env.XDG_CONFIG_HOME }}/scripts/iterm*'

- name: Check age of iTerm2 integration
  find:
    paths:
      - '{{ ansible_env.XDG_CONFIG_HOME }}/fish/conf.d'
    pattern: zzz_iterm2_shell_integration.fish
    age: -7d
  register: iterm2_integration

- name: Install iTerm2 integration
  get_url:
    url: https://iterm2.com/shell_integration/fish
    dest: '{{ ansible_env.XDG_CONFIG_HOME }}/fish/conf.d/zzz_iterm2_shell_integration.fish'
  when: iterm2_integration.matched == 0

- name: Install dotfiles
  file:
    src: '{{ item }}'
    dest: '{{ ansible_env.HOME }}/{{ item | basename | regex_replace("^_", ".") }}'
  with_fileglob:
    - '{{ ansible_env.XDG_CONFIG_HOME }}/_*'
    - '{{ ansible_env.XDG_CONFIG_HOME }}/private/_*'

- name: Clean up old dotfile links
  command: find -L "$HOME" -type l -maxdepth 1 -name '.*' -exec rm {} +

- name: Generate plists
  template:
    src: 'templates/launchagent.plist.j2'
    dest: '{{ ansible_env.XDG_DATA_HOME }}/LaunchAgents/{{ item.name }}.plist'
    lstrip_blocks: true
  register: plists
  loop:
    - name: uk.eskola.ansible
      command: '/opt/homebrew/bin/ansible-galaxy install -r "{{ ansible_env.XDG_CONFIG_HOME }}/ansible/requirements.yaml"; /opt/homebrew/bin/ansible-playbook -i "{{ ansible_env.XDG_CONFIG_HOME }}/ansible/hosts" "{{ ansible_env.XDG_CONFIG_HOME }}/ansible/main.yaml" | /opt/homebrew/bin/ts'
      run_at_load: true
      schedule:
        minute: 0
    - name: uk.eskola.crondaily
      command: '{{ ansible_env.XDG_CONFIG_HOME }}/scripts/run-dir.sh {{ ansible_env.XDG_CONFIG_HOME }}/cron.d/daily {{ ansible_env.XDG_CONFIG_HOME }}/private/cron.d/daily'
      use_fdautil: true
      schedule:
        hour: 7
        minute: 0
    - name: uk.eskola.cronhourly
      command: '{{ ansible_env.XDG_CONFIG_HOME }}/scripts/run-dir.sh {{ ansible_env.XDG_CONFIG_HOME }}/cron.d/hourly {{ ansible_env.XDG_CONFIG_HOME }}/private/cron.d/hourly'
      use_fdautil: true
      schedule:
        minute: 0
    - name: uk.eskola.logind
      command: '{{ ansible_env.XDG_CONFIG_HOME }}/scripts/run-dir.sh {{ ansible_env.XDG_CONFIG_HOME }}/login.d {{ ansible_env.XDG_CONFIG_HOME }}/login.d'
      use_fdautil: true
      run_at_load: true
    - name: uk.eskola.autodarkmode
      command: '{{ ansible_env.HOME }}/bin/autodarkmode.py | ts'
      use_fdautil: true
      start_interval: 60
  vars:
    env:
      - PATH
      - XDG_CACHE_HOME
      - XDG_CONFIG_HOME
      - XDG_DATA_HOME

- name: Run plists
  community.general.launchd:
    name: '{{ item.item.name  }}'
    state: started
  loop: '{{ plists.results }}'
