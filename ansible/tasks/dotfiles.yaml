---
- name: Ensure default XDG paths are symlinked
  block:
    - name: Ensure .local exists
      file:
        dest: "{{ ansible_env.HOME }}/.local"
        state: directory
        mode: "0700"
    - name: Ensure .local subdirectories are linked into place
      file:
        src: "{{ ansible_env.HOME }}/Library"
        dest: "{{ ansible_env.HOME }}/.local/{{ item.name }}"
        state: link
      loop:
        - { name: share }
        - { name: state }

- name: Ensure dotfiles and scripts are up to date # noqa command-instead-of-module
  shell:
    cmd: git pull --rebase -q || true
    chdir: "{{ item }}"
  loop:
    - "{{ ansible_env.XDG_CONFIG_HOME }}"
    - "{{ ansible_env.HOME }}/bin"
  register: git_update
  changed_when: '"Already up to date." not in git_update.stdout'

- name: Link preferences into place
  file:
    src: "{{ ansible_env.XDG_CONFIG_HOME }}/{{ item }}"
    dest: "{{ ansible_env.HOME }}/Library/Preferences/{{ item }}"
    state: link
  loop:
    - espanso

- name: Link application support into place
  file:
    src: "{{ ansible_env.XDG_CONFIG_HOME }}/{{ item }}"
    dest: "{{ ansible_env.HOME }}/Library/Application Support/{{ item }}"
    state: link
  loop:
    - rustfmt

- name: Install dotfiles
  file:
    src: "{{ item }}"
    dest: '{{ ansible_env.HOME }}/{{ item | basename | regex_replace("^_", ".") }}'
    state: link
  with_fileglob:
    - "{{ ansible_env.XDG_CONFIG_HOME }}/_*"
    - "{{ ansible_env.XDG_CONFIG_HOME }}/private/_*"

- name: Clean up old dotfile links
  command: find -L "$HOME" -type l -maxdepth 1 -name '.*' -exec rm {} +
  changed_when: true
