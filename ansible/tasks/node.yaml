---
- name: Install node versions
  environment:
    YARN_PREFIX: "{{ ansible_env.XDG_DATA_HOME }}/yarn"
  block:
    - name: Get available stable versions
      shell: |
        fnm ls-remote | cut -d '.' -f 1 | sort -uV | sed -E -n '/14/,${/[24680]/p;}' |
          xargs -n 1 -I {} sh -c 'fnm ls-remote | grep {} | tail -n 1' | cut -d ' ' -f 1
      register: node_versions
      changed_when: false
    - name: Install stable versions
      shell:
        cmd: |
          fnm install {{ item }}
        creates: "{{ ansible_env.XDG_DATA_HOME }}/Application Support/fnm/node-versions/{{ item }}"
      with_items: "{{ node_versions.stdout_lines }}"
      register: node_install
    - name: Set newest version as default
      shell:
        cmd: |
          fnm default {{ node_versions.stdout_lines | last }}
      # creates: "{{ ansible_env.XDG_DATA_HOME }}/Application Support/fnm/aliases/{{ item }}"
      when: node_install.results | last is changed
      changed_when: true
    - name: Install default packages
      shell:
        cmd: |
          yarn global add {{ item }}
        creates: "{{ ansible_env.XDG_DATA_HOME }}/yarn/global/node_modules/{{ item }}"
      loop:
        - markdownlint-cli
        - prettier
        - "@fsouza/prettierd"
        - rome
        - typescript
        - typescript-language-server
        - vscode-langservers-extracted
