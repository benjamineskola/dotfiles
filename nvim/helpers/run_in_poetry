#!/usr/bin/env python
"""When linked to the name of some other binary, find it on the PATH and run it within a poetry environment if there is one.

Used to simplify situations where the binary to be called isn't configurable or can't detect poetry.
"""
import os
import subprocess
import sys

if __name__ == "__main__":
    args = sys.argv.copy()
    args[0] = os.path.basename(args[0])
    source_file = None

    for n, i in enumerate(args[1:], start=1):
        if os.path.exists(i):
            args[n] = os.path.abspath(i)
            source_file = args[n]
    logfile = open(f"{os.environ['HOME']}/{args[0]}.log", "a")

    if not source_file:
        sys.exit(1)

    source_dir = os.path.dirname(source_file)
    lockfile = os.path.join(source_dir, "poetry.lock")
    while not os.path.exists(lockfile) and source_dir != "/":
        source_dir = os.path.dirname(source_dir)
        lockfile = os.path.join(source_dir, "poetry.lock")

    if source_dir == "/":
        source_dir = os.path.dirname(source_file)
    os.chdir(source_dir)

    if os.path.exists(lockfile):
        args = ["poetry", "run"] + args
    os.execvp(args[0], args)
